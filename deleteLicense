#Remove O365 Licenses
#August 14, 2015
#Michael Matthews 
#################
#This script is designed to remove office 365 licenses from past students and employees at BYU.  It logs in using the Connet-MsolService command
#It then sets forth the different types of licenses. Afterwards it uses the Import-CSV command to bring in the list of need-to-remove users.
#Afterwards it determines whether or not they are a student or employee.  They are then given the appriopriate licenses.  
#This information is then logged under D:\Scripts\Licensesupdates\Logs\ChangeLogs
#################

#Formatting Dates
$todaysDate = Get-Date -Format yyyy-%M-%d
$currentYear = Get-Date -Format yyyy

#If you ever need to change the password.  Use the code below to convert it to a secure string and save it to a file "testpassword" | ConvertTo-SecureString -AsPlainText -Force | ConvertFrom-SecureString | Out-File "D:\Prod\Login\o365-Prod\Login2.txt"

#Establishing a session
Import-Module MSOnline
$User = "licensesupdateuser@byu.onmicrosoft.com"
$File = "D:\Prod\Login\o365-Prod\Login2.txt"
$MyCredential=New-Object -TypeName System.Management.Automation.PSCredential `
 -ArgumentList $User, (Get-Content $File | ConvertTo-SecureString)
Connect-MsolService -Credential $MyCredential 


#The variables below are for logging purposes
$fileToWrite = "D:\Scripts\Licensesupdates\Logs\ChangeLogs\$currentYear\change-$todaysDate.txt" 
$toLogStudent = " Added the following students "
$toLogEmployee = " Added the following employees"
$noUsers = "No Users were added today"

#In dev the licenses are different than those in prod
$studentadvantage = New-MsolLicenseOptions -AccountSkuId byu:OFFICESUBSCRIPTION_STUDENT 
$student = New-MsolLicenseOptions -AccountSkuId byu:STANDARDWOFFPACK_STUDENT -DisabledPlans EXCHANGE_S_STANDARD,MCOSTANDARD
$facultyadvantage = New-MsolLicenseOptions -AccountSkuId byu:OFFICESUBSCRIPTION_FACULTY 
$faculty = New-MsolLicenseOptions -AccountSkuId byu:STANDARDWOFFPACK_FACULTY -DisabledPlans EXCHANGE_S_STANDARD,MCOSTANDARD
$BI = New-MsolLicenseOptions -AccountSkuId byu:POWER_BI_STANDARD

$needToRemoveList = import-csv D:\Scripts\Licensesupdates\currentusers\Office_365_Delete.txt

$needtoremove = @()

ForEach($old in $needToRemoveList) {
    ($needtoremove += $old.UserPrincipalName)
}

#The number below is the limit to how many users can be removed at once
$catch = 10000

#This serves as a douple check.  If $needtoremove exceeds a certain number the script will stop
if ($needtoremove.length -ge $catch) {
Write-host "You are trying to remove too many users at once"
break
}

$fileToWrite = "D:\Scripts\Licensesupdates\Logs\ChangeLogs\change-$todaysDate.txt"
$toLogStudent = "Removed the following students "
$toLogEmployee = "Removed the following employees employee "
$noUsers = "No users were removed today"


 $needToRemoveList |  ForEach-Object {
    $csvusers += $_.UserPrincipalName;
    $usersFound = Get-MsolUser -UserPrincipalName $_.UserPrincipalName;
    
    if ($usersFound -ne $null) {
        if($usersFound.isLicensed) {

            if ($_.Status -eq "Student"){
              
	          Set-MsolUserLicense -UserPrincipalName $_.UserPrincipalName  -RemoveLicenses @("byu:STANDARDWOFFPACK_STUDENT", "byu:OFFICESUBSCRIPTION_STUDENT", "byu:POWER_BI_STANDARD");
              $toLogStudent += "$($_.UserPrincipalName)", "$($_.Status)" ;
              
            }
            elseif ($_.Status -eq "Employee"){
               
               Set-MsolUserLicense -UserPrincipalName $_.UserPrincipalName -RemoveLicenses @("byu:STANDARDWOFFPACK_FACULTY", "byu:OFFICESUBSCRIPTION_FACULTY", "byu:POWER_BI_STANDARD");
               $toLogEmployee += "$($_.UserPrincipalName)", "$($_.Status)";
            }

        }
    
     }
 } 

 #If there isn't any users removed then it loggs $noUsers
 
 if ($needToRemoveList.Length -eq 0){

 $noUsers | Outfile $fileToWrite -append

 }
 else {
 
 $toLogStudent | Out-file $fileToWrite -append
 $toLogEmployee | Out-File $fileToWrite -append

 }

 